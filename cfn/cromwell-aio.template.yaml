# Cribbed from https://raw.githubusercontent.com/aws-samples/aws-genomics-workflows/master/src/templates/cromwell/cromwell-aio.template.yaml
---
AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  (WWPS-GLS-WF-CROMWELL-AIO) Creates the complete set of resources needed to run
  genomics workflows using Cromwell on AWS Batch

Mappings:
  TagMap:
    default:
      architecture: "genomics-workflows"
      solution: "cromwell"
      tags:
        - Key: "architecture"
          Value: "genomics-workflows"
        - Key: "solution"
          Value: "cromwell"


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Required"
        Parameters:
          - KeyPairName
      - Label:
          default: "Data Storage"
        Parameters:
          - S3BucketName
          - ExistingBucket
      - Label:
          default: "AWS Batch"
        Parameters:
          - SpotBidPercentage
          - DefaultCEMinvCpus
          - DefaultCEMaxvCpus
          - HighPriorityCEMinvCpus
          - HighPriorityCEMaxvCpus
      - Label:
          default: "Cromwell Server"
        Parameters:
          - CromwellVersion
          - CromwellVersionSpecified
          - InstanceType
          - InstanceName
          - SSHLocation
          - HTTPLocation

    ParameterLabels:
      S3BucketName:
        default: S3 Bucket Name
      ExistingBucket:
        default: Existing Bucket?
      KeyPairName:
        default: EC2 Key Pair Name
      SpotBidPercentage:
        default: Spot Bid %
      DefaultCEMinvCpus:
        default: Default Min vCPU
      DefaultCEMaxvCpus:
        default: Default Max vCPU
      HighPriorityCEMinvCpus:
        default: High Priority Min vCPU
      HighPriorityCEMaxvCpus:
        default: High Priority Max vCPU
      TemplateRootUrl:
        default: Template Root URL

# Parameters
Parameters:    
  S3BucketName:
    Description: >-
      A S3 bucket name for storing analysis results.
      The bucket name must respect the S3 bucket naming conventions 
      (can contain lowercase letters, numbers, periods and hyphens).
      If left blank a unique bucket name will be generated.

    Type: String
    AllowedPattern: "((?=^.{3,63}$)(?!^(\\d+\\.)+\\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])\\.)*([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])$)|(^.{0}$))"
    ConstraintDescription: "Must respect S3 bucket naming conventions"
  ExistingBucket:
    Description: Does this bucket already exist?
    Type: String
    AllowedValues:
      - Yes
      - No
    Default: No
  KeyPairName:
    Description: Key Pair name used for SSH access to the Cromwell Server.
    Type: AWS::EC2::KeyPair::KeyName
  SpotBidPercentage:
    Description: The percent of on-demand pricing for max bid for Spot intances
    Type: Number
    Default: 100
  DefaultCEMinvCpus:
    Description: The minimum number of CPUs for the default Batch Compute Environment
    Type: Number
    Default: 0
  DefaultCEMaxvCpus:
    Description: The maximum number of CPUs for the default Batch Compute Environment
    Type: Number
    Default: 100
  HighPriorityCEMinvCpus:
    Description: The minimum number of CPUs for the high-priority Batch Compute Environment
    Type: Number
    Default: 0
  HighPriorityCEMaxvCpus:
    Description: The maximum number of CPUs for the high-priority Batch Compute Environment
    Type: Number
    Default: 100
  InstanceType:
    Description: >-
      EC2 instance type.
      
      Cromwell itself does not require much compute power. 
      A t2.medium should be sufficient.  If you want to run this server on the 
      free tier, use a t2.micro or t3.micro.
    Type: String
    Default: t2.medium
    AllowedValues:
    - t2.micro
    - t2.medium
    - t2.large
    - t3.micro
    - t3.medium
    - t3.large
    ConstraintDescription: "Must be 't2.micro', 't2.medium', 't2.large', t3.micro, t3.medium, or t3.large."
  InstanceName:
    Type: String
    Default: cromwell-server
    Description: The name of the EC2 instance that is created
  CromwellVersion:
    Type: String
    Description: >-
      Version of Cromwell to install. "latest" will retrieve the currently released
      version of Cromwell from Github.
    AllowedValues:
      - latest
      - specify ...
    Default: latest
  CromwellVersionSpecified:
    Type: String
    Description: >-
      Specific version of Cromwell to install.  Must match a released version number.
      For example, 36, 36.1, 41, 42, etc.  Ignored if "Cromwell Version" is set to "latest".
  SSHLocation:
    Description: >-
      The IP address range that has SSH access to the EC2 instances. In a production setup you should restrict this
      to a trusted range
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  HTTPLocation:
    Description: >-
      The IP address range that has HTTP access to the EC2 instances. In a production setup you should restrict this
      to a trusted range
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  
  ArtifactRootUrl:
    Type: String
    Default: https://d3mhka25m6n3zh.cloudfront.net/artifacts
    Description: >-
      Root URL for where artifacts / additions scripts are stored
  
  TemplateRootUrl:
    Type: String
    Description: >-
      Root URL for where nested templates are stored
    Default: https://s3.amazonaws.com/aws-genomics-workflows/templates
    ConstraintDescription: >-
      Must be a valid S3 URL
    AllowedPattern: "https://s3(-[a-z0-9]+)*\\.amazonaws\\.com/[a-z0-9-./]{3,}"

Conditions:
  GetLatestCromwellVersion:
    Fn::Equals:
      - !Ref CromwellVersion
      - latest

Resources:
  VpcStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:  https://aws-quickstart.s3.amazonaws.com/quickstart-aws-vpc/templates/aws-vpc.template
      TimeoutInMinutes: 15
      Parameters:
        AvailabilityZones:
          Fn::Join:
            - "," 
            - - !Sub "${AWS::Region}a"
              - !Sub "${AWS::Region}b"
        NumberOfAZs: "2"
      Tags: !FindInMap ["TagMap", "default", "tags"]

  GenomicsWorkflowStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:  !Sub ${TemplateRootUrl}/aws-genomics-root-novpc.template.yaml
      Parameters:
        VpcId: !GetAtt 'VpcStack.Outputs.VPCID'
        SubnetIds: !Sub "${VpcStack.Outputs.PrivateSubnet1AID}, ${VpcStack.Outputs.PrivateSubnet2AID}"
        S3BucketName: !Ref S3BucketName
        ExistingBucket: !Ref ExistingBucket
        WorkflowOrchestrator: cromwell
        SpotBidPercentage: !Ref 'SpotBidPercentage'
        DefaultCEMinvCpus: !Ref 'DefaultCEMinvCpus'
        DefaultCEMaxvCpus: !Ref 'DefaultCEMaxvCpus'
        HighPriorityCEMinvCpus: !Ref 'HighPriorityCEMinvCpus'
        HighPriorityCEMaxvCpus: !Ref 'HighPriorityCEMaxvCpus'
        ArtifactRootUrl: !Ref ArtifactRootUrl
        TemplateRootUrl: !Ref TemplateRootUrl
      Tags: !FindInMap ["TagMap", "default", "tags"]

  CromwellServerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:  !Sub ${TemplateRootUrl}/cromwell/cromwell-server.template.yaml
      Parameters:
        InstanceType: !Ref 'InstanceType'
        VpcId: !GetAtt 'VpcStack.Outputs.VPCID'
        PublicSubnetID: !GetAtt 'VpcStack.Outputs.PublicSubnet1ID'
        InstanceName: !Join ["-", [!Ref 'InstanceName', !Select [2, !Split ["/", !Ref "AWS::StackId" ]]]]
        CromwellVersion: !Ref CromwellVersion
        CromwellVersionSpecified: !Ref CromwellVersionSpecified
        KeyName: !Ref 'KeyPairName'
        SSHLocation: !Ref 'SSHLocation'
        HTTPLocation: !Ref 'HTTPLocation'
        # possibly autogenerated s3 bucket name
        S3BucketName: !GetAtt 'GenomicsWorkflowStack.Outputs.GenomicsEnvS3Bucket'
        BatchQueue: !GetAtt 'GenomicsWorkflowStack.Outputs.GenomicsEnvDefaultJobQueueArn'
      Tags: !FindInMap ["TagMap", "default", "tags"]


Outputs:
  CromwellServerHostName:
    Value: !GetAtt 'CromwellServerStack.Outputs.HostName'
    Export:
      Name: !Sub "${AWS::StackName}-CromwellServerHostName"
    Description: >-
      Cromwell server public DNS name. Use this URL in a web browser or via curl
      to access Cromwell and submit workflows.
  CromwellServerVersion:
    Description: >-
      Version of Cromwell installed.
    Value:
      Fn::If:
        - GetLatestCromwellVersion
        - !Ref CromwellVersion
        - !Ref CromwellVersionSpecified
  VpcId:
    Description: >-
      The VPC created for your Cromwell stack. Use this ID if you need to launch
      additional Cromwell servers.
    Value: !GetAtt 'VpcStack.Outputs.VPCID'
  S3Bucket:
    Value: !GetAtt 'GenomicsWorkflowStack.Outputs.GenomicsEnvS3Bucket'
    Export:
      Name: !Sub "${AWS::StackName}-S3Bucket"
    Description: >-
      S3 bucket for storing genomics workflow input and output data
  BatchDefaultQueue:
    Value: !GetAtt 'GenomicsWorkflowStack.Outputs.GenomicsEnvDefaultJobQueueArn'
    Export:
      Name: !Sub "${AWS::StackName}-DefaultJobQueue"
    Description: >-
      The default AWS Batch job queue for workflow jobs, based on EC2 SPOT instances
  BatchHighPriorityQueue:
    Value: !GetAtt 'GenomicsWorkflowStack.Outputs.GenomicsEnvHighPriorityJobQueueArn'
    Export:
      Name: !Sub "${AWS::StackName}-HighPriorityJobQueue"
    Description: >-
      AWS Batch job queue for high priority workflow jobs, based on EC2 On-Demand
      instances
...